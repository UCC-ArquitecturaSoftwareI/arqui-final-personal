version: '3'

services:
  mysql_users:
    container_name: "users_database"
    image: mysql:8.0.23
    networks: 
      - default
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "users"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
    command: --default-authentication-plugin=mysql_native_password
  rabbit:
    image: rabbitmq:3-management
    ports:
     - "5671:5671"
     - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
  solr:
    image: solr
    ports:
     - "8983:8983"
    command:
      - solr-precreate
      - items
    volumes:
      - ./solr-config/managed-schema:/opt/solr/server/solr/configsets/_default/conf/managed-schema
  mongo:
    image: mongo:latest
    container_name: "mongodb"
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
  memcached:
    image: memcached:1.6.16
    container_name: "memcached"
    ports:
      - "11211:11211"
  items-service:
    container_name: "items-service"
    build:
      context: ./../items-service
      dockerfile: ./../items-service/items-service.dockerfile
    restart: always
    ports:
      - "8090:8090"
    deploy:
      mode: replicated
      replicas: 1
  search-service:
    container_name: "search-service"
    build:
      context: ./../search-service
      dockerfile: ./../search-service/search-service.dockerfile
    restart: always
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
  users-service:
    container_name: "users-service"
    build:
      context: ./../users-service
      dockerfile: ./../users-service/users-service.dockerfile
    restart: always
    ports:
      - "8081:8081"
    deploy:
      mode: replicated
      replicas: 1